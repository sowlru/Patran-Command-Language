# Create simple supported 2D beam (width, height, thk, length, shape, mat_code) -> stress
FUNCTION beam2D(width, height, thk, length, mat_code)
REAL width, height, thk, length; INTEGER mat_code

uil_file_new.go( "C:\appl\MSC\Patran_x64\20170/template.db", "C:\avk\test\patran\t.db" )
REAL r_x = 0.0, r_y = 0.0, E, el_size = 1.0, load = 100.0
STRING s_coord2[20], s_coord3[20], p[VIRTUAL], line[VIRTUAL], surf[VIRTUAL]

# 1.POINTS | --------------------------------------------------
asm_const_grid_xyz("1", "[0 0 0]", "Coord 0", p)
r_y = (height - thk)/2; s_coord2 = "[0 " // str_from_real(r_y) //" 0]"
asm_const_grid_xyz("2", s_coord2, "Coord 0", p)
r_x = width/2; s_coord3 = "[" // str_from_real(r_x) // " " // str_from_real(r_y) //" 0]"
asm_const_grid_xyz("3", s_coord3, "Coord 0", p)

# 2.LINES | --------------------------------------------------
asm_const_line_2point( "1", "Point 1", "Point 2", 0, "", 50., 1, line )
asm_const_line_2point( "2", "Point 2", "Point 3", 0, "", 50., 1, line )

# 3.SURFACE | --------------------------------------------------
sgm_const_surface_extrude( "1", "<0 0 " // str_from_real(length/2)  // ">", 1., 0., "[0 0 0]", "Coord 0", "Curve 1 2", surf )
sgm_transform_mirror( "3", "surface", "Coord 0.1", 0., TRUE, FALSE, "Surface 2", surf )
sgm_transform_mirror( "4", "surface", "Coord 0.2", 0., TRUE, FALSE, "Surface 1:3", surf )
sgm_transform_mirror( "7", "surface", "Coord 0.3", 0., TRUE, FALSE, "Surface 1:6", surf )

$# 4.MESH  | ---------------------------------------------------------------------------------------------
INTEGER n1, e1, i_return_value; STRING n2[VIRTUAL], e2[VIRTUAL]
STRING s_el_size[32](4); s_el_size(1) = str_from_real(el_size);
i_return_value = fem_create_mesh_surf_4( "IsoMesh", 49152, "Surface 1:12", 1, s_el_size, "Quad4", "#", "#", "Coord 0", "Coord 0", n1, e1, n2, e2 )

$# 5.EQUIVALENCE  | ---------------------------------------------------------------------------------------------
REAL eq; INTEGER eq_; fem_equiv_all_group4( [" "], 0, "", 1, 1, 0.005, FALSE, eq, eq_ )

# 6.MATERIAL | --------------------------------------------------
SWITCH(mat_code)
	CASE (11)
		E = 10.5
	DEFAULT
		E = 10.0
END SWITCH
STRING sa_prop_values[64](4)
sa_prop_values(1) = str_from_real(E*1000000); sa_prop_values(2) = "0.3"
sa_prop_values(3) = "0.1" ; sa_prop_values(4) = ""
material.create( "Analysis code ID", 1, "Analysis type ID", 1, "m1", 0, "", "Isotropic", 1, "Directionality", 1, "Linearity", 1, "Homogeneous", 0, "Linear Elastic", 1, "Model Options & IDs", ["", "", "", "", ""], [0, 0, 0, 0,  0], "Active Flag", 1, "Create", 10, "External Flag", FALSE, "Property  IDs", ["Elastic Modulus", "Poisson Ratio"], [2, 5, 0], @
"Property Values", sa_prop_values )

$# 7.PROPERTIES  | ---------------------------------------------------------------------------------------------
STRING s_prop7[64](17); s_prop7(1) = "m:m1"; s_prop7(3) = str_from_real(thk);
elementprops_create( "plate_1", 51, 25, 35, 1, 1, 20, @
[13, 20, 36, 4037, 4111, 4118, 4119, 8111, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409], @
[ 5,  9,  1,    1,    1,    1,    1,    4,    4,    1,    1,    1,    1,    1,    1,    4,    4], s_prop7, "Surface 1:12" )

$# 8.BOUNDARIES  | ---------------------------------------------------------------------------------------------
loadsbcs_create2( "y", "Displacement", "Nodal", "", "Static", ["Surface 7:8.3 9:11.2 12.3"], "Geometry", "Coord 0", "1.", ["<0,0,0>", "<>", "<>", "<>"], ["", "", "", ""] )
# loadsbcs_create2( "z", "Displacement", "Nodal", "", "Static", ["Surface 1:2.2 3:5.3 6.2"], "Geometry", "Coord 0", "1.", ["<0,0,0>", "<>", "<>", "<>"], ["", "", "", ""] )

$# 9.LOADS  | ---------------------------------------------------------------------------------------------
STRING s_load[64](4); s_load(1) = "<," // str_from_real(-load/((height/el_size) + 1))  // ",>"
loadsbcs_create2( "b", "Force", "Nodal", "", "Static", ["Surface 1.2 4.3"], "Geometry", "Coord 0", "1.", s_load, ["", "", "", ""] )

# 10.DISPLAY | --------------------------------------------------
# node_size( 9 )
gu_fit_view(  ); point_size( 9 ); point_label( TRUE ); curve_label( TRUE ); ga_view_aa_set( 180., -90., 180. )

# 11.ANALYSIS | --------------------------------------------------
jobfile.open( "t", "ANALYZE NO JOBFILE" )
msc_delete_old_files( "t", ".bdf", ".op2" )
jobfile.write_spl( "/* Jobfile for PATNAS created %A% at %A% */", ["10-Dec-18", "16:08:19"] )
jobfile.writec( "", "TRANSLATOR = pat3nas" )
jobfile.writec( "DATABASE", "C:\avk\test\patran\t.db" )
jobfile.writec( "JOBNAME", "t" )
jobfile.writec( "ANALYSIS TITLE", "static" )
jobfile.writec( "ANALYSIS SUBTITLE", "" )
jobfile.writec( "ANALYSIS LABEL", "" )
jobfile.writec( "OBJECT", "Entire Model" )
jobfile.writec( "METHOD", "Full Run" )
jobfile.writec( "", "" )
jobfile.writec( "MODEL SUFFIX", ".bdf" )
jobfile.writec( "RESULTS SUFFIX", ".op2" )
jobfile.writec( "", "/*" )
jobfile.writec( "", " * Translation Parameters" )
jobfile.writec( "", " */" )
jobfile.writec( "DATA OUTPUT", "XDB+PRINT" )
jobfile.writec( "OUTPUT2 REQUESTS", "P3 Built In" )
jobfile.writec( "OUTPUT2 FORMAT", "Binary" )
jobfile.writec( "DIVISION TOLERANCE", "1.0e-08" )
jobfile.writec( "NUMERICAL TOLERANCE", "1.0e-04" )
jobfile.writec( "WRITING TOLERANCE", "1.0e-21" )
jobfile.writec( "GEOM CHECK", "INFORM" )
jobfile.writec( "SORTED BULK", "NO" )
jobfile.writec( "CARD FORMAT", "either" )
jobfile.writec( "NODE COORDINATES", "reference frame" )
jobfile.writec( "COORD COORDINATES", "global" )
jobfile.writec( "MSC.Nastran VERSION", "2017." )
jobfile.writec( "WRITE STORED PRECISION", "TRUE" )
jobfile.writec( "PROPS ON ELEM ENTRY", "FALSE" )
jobfile.writec( "CONTINUATION ENTRY", "FALSE" )
jobfile.writec( "PCOMPG ENTRY", "TRUE" )
jobfile.writec( "CONVERT CBAR CBEAM", "FALSE" )
jobfile.writec( "ITERATIVE SOLVER", "FALSE" )
jobfile.writei( "SUPER ELEMENT 0", 0 )
jobfile.writec( "SEALL WRITE", "FALSE" )
jobfile.writec( "PART SUPERELEMENT CREATE", "TRUE" )
jobfile.writec( "AUTOQSET", "FALSE" )
jobfile.writec( "FIXEDB", "FALSE" )
jobfile.writei( "SUPER TREE COUNT", 0 )
jobfile.writec( "MODEL TOLERANCE", "0.0049999999" )
jobfile.writec( "ELEMENT PROPERTY OFFSET", "0" )
jobfile.writec( "MATERIAL PROPERTY OFFSET", "0" )
jobfile.writec( "TABLE OFFSET", "0" )
jobfile.writec( "LOAD SET OFFSET", "0" )
jobfile.writec( "LOAD CASE OFFSET", "0" )
jobfile.writec( "CONTROL SET OFFSET", "0" )
jobfile.writec( "RIGID ELEMENT OFFSET", "0" )
jobfile.writec( "SCALAR POINT OFFSET", "0" )
jobfile.writec( "BEGINNING CONTINUATION MARKER", "+      A" )
jobfile.writec( "NUMBER ONLY", "ON" )
jobfile.writec( "BEGINNING NUMBER", "OFF" )
jobfile.writec( "TRAILING NUMBER", "OFF" )
jobfile.writec( "SYNTAX NUMBER", "ON" )
jobfile.writec( "SYNTAX MARKER", "." )
jobfile.writec( "EXTERNAL SUPERELEMENT METHOD", "NONE" )
jobfile.writec( "GRID COORDINATES ROUNDING", "15" )
jobfile.writec( "COORD DATA PRECISION ROUNDING", "15" )
jobfile.writec( "MPC DATA PRECISION ROUNDING", "15" )
jobfile.writec( "LBC DATA PRECISION ROUNDING", "7" )
jobfile.writec( "MAT DATA PRECISION ROUNDING", "15" )
jobfile.writec( "PROP DATA PRECISION ROUNDING", "7" )
jobfile.writec( "", "/* === Solution Parameters === */" )
jobfile.writec( "SOLUTION TYPE", "LINEAR STATIC" )
jobfile.writei( "SOLUTION SEQUENCE", 101 )
jobfile.writec( "DATABASE RUN", "ON" )
jobfile.writec( "CYCLIC SYMMETRY", "OFF" )
jobfile.writec( "AUTOMATIC CONSTRAINTS", "ON" )
jobfile.writec( "INERTIA RELIEF", "OFF" )
jobfile.writec( "ALTERNATE REDUCTION", "OFF" )
jobfile.writec( "SHELL NORMAL TOLERANCE", "" )
jobfile.writec( "MASS CALCULATION", "Lumped" )
jobfile.writec( "DATA DECK ECHO", "None" )
jobfile.writec( "PLATE RZ STIFFNESS FACTOR", "100.0" )
jobfile.writec( "MAXIMUM PRINTED LINES", "" )
jobfile.writec( "MAXIMUM RUN TIME", "" )
jobfile.writec( "WT-MASS CONVERSION", "1.0" )
jobfile.writec( "NODE ID FOR WT-GENER", "" )
jobfile.writec( "RIGID ELEMENT TYPE", "LINEAR" )
jobfile.writec( "USE SOL600", "OFF" )
jobfile.writei( "CONTACT-SEGMENT-CONTROL METHOD", 0 )
jobfile.writei( "CONTACT-DEFORMABLE-DEFORMABLE METHOD", 0 )
jobfile.writei( "CONTACT-CRITERION", 0 )
jobfile.writei( "CONTACT-DERIVATION", 0 )
jobfile.writei( "CONTACT-REL_ABS", 0 )
jobfile.writec( "USE SOL700", "OFF" )
jobfile.writec( "SN MEAN STRESS CORRECTION", "NONE" )
jobfile.writec( "NEF FATIGUE STRESS OUTPUT", "NONE" )
jobfile.writec( "NEF STRESS UNITS", "MPA" )
jobfile.writec( "NEF STRESS COMBINATION", "ABSMAXPR" )
jobfile.writec( "NEF RESULT LOCATION", "NODA" )
jobfile.writec( "NEF RECOVERY LOCATION", "CORNER" )
jobfile.writec( "NEF LAYER LOCATION", "WORST" )
jobfile.writec( "NEF INTERPOLATION LIMIT", "0" )
jobfile.writec( "NEF LEVEL OF MESSAGE", "0" )
jobfile.writec( "NEF NUMBER OF THREADS", "1" )
jobfile.writer( "NEF CERTAINTY OF SURVIVAL", 50. )
jobfile.writer( "NEF OVERALL SCALE FACTOR", 1. )
jobfile.writer( "NEF TOP STRESS PERCENTAGE FILTER", 100. )
jobfile.writer( "NEF TOP DAMAGE PERCENTAGE FILTER", 100. )
jobfile.writec( "NEF TIME HISTORY DIRECTORY", "C:\Users\gj284c" )
jobfile.writei( "NEF MAX LOAD PER EVENT", 1 )
jobfile.writec( "NEF EVENT DATA", "0" )
jobfile.writec( "NEF LOAD SEQUENCE DATA", "0" )
jobfile.writec( "USE CONTACT TABLE", "OFF" )
jobfile.writec( "INITIAL CONTACTPAIR LOADCASE NAME", "" )
jobfile.writei( "MDOF DATA", 0 )
jobfile.writec( "CELL WRITE", "ON" ); jobfile.writei( "CELL INPUT 0", 0 )
jobfile.writec( "FMS WRITE",  "ON" ); jobfile.writei( "FMS INPUT 0",  0 )
jobfile.writec( "EXEC WRITE", "ON" ); jobfile.writei( "EXEC INPUT 0", 0 )
jobfile.writec( "CASE WRITE", "ON" ); jobfile.writei( "CASE INPUT 0", 0 )
jobfile.writec( "BULK WRITE", "ON" ); jobfile.writei( "BULK INPUT 0", 0 )
jobfile.writec( "CELL DTI POSITION", "START" )
jobfile.writec( "FMS DTI POSITION", "START" )
jobfile.writec( "EXEC DTI POSITION", "START" )
jobfile.writec( "CASE DTI POSITION", "START" )
jobfile.writec( "BULK DTI POSITION", "START" )
jobfile.writec( "", "END" ); jobfile.close(  )

mscnastran_subcase.create( "101", "Default", "This is a default subcase." )
mscnastran_subcase.create_char_param( "LOAD CASE", "Default" )
mscnastran_subcase.create_char_param( "SUBCASE TITLE", "This is a default subcase." )
mscnastran_subcase.create_char_param( "SUBCASE SUBTITLE", "Default" )
mscnastran_subcase.create_char_param( "SUBCASE LABEL", " STATIC;-" )
mscnastran_subcase.create_char_param( "SUBCASE TITLE FLAG", "OFF" )
mscnastran_subcase.create_char_param( "SUBCASE SUBTITLE FLAG", "ON" )
mscnastran_subcase.create_char_param( "SUBCASE LABEL FLAG", "OFF" )
mscnastran_subcase.create_char_param( "Default", "STRUCTURAL" )
mscnastran_subcase.create_char_param( "DISPLACEMENTS", "1" )
mscnastran_subcase.create_char_param( "DISPLACEMENTS 1","DISPLACEMENT(SORT1,REAL)=0" )
mscnastran_subcase.create_char_param( "ELEMENT STRESSES", "1" )
mscnastran_subcase.create_char_param( "ELEMENT STRESSES 1", "STRESS(SORT1,REAL,VONMISES,BILIN)=0;PARAM,NOCOMPS,1" )
mscnastran_subcase.create_char_param( "CONSTRAINT FORCES", "1" )
mscnastran_subcase.create_char_param( "CONSTRAINT FORCES 1","SPCFORCES(SORT1,REAL)=0" )
mscnastran_subcase.create_char_param( "ELEMENT FORCES", "1" )
mscnastran_subcase.create_char_param( "ELEMENT FORCES 1","FORCE(SORT1,REAL,BILIN)=0" )
mscnastran_subcase.create_char_param( "GRID POINT FORCE BALANCE", "1" )
mscnastran_subcase.create_char_param( "GRID POINT FORCE BALANCE 1","GPFORCE=0" )
mscnastran_subcase.create_char_param( "SUBCASE WRITE", "ON" )
mscnastran_subcase.create_char_param( "SUBCASE DIRECT TEXT POS", "OFF" )
mscnastran_subcase.create_int_param( "SUBCASE INPUT 0", 0 )
mscnastran_subcase.create_char_param( "INCREMENT TYPE CODE SOL 101","LCNTSTAT" )
mscnastran_subcase.create_char_param( "INCREMENT TYPE SOL 101", "Linear Contact (LCNT)" )
mscnastran_subcase.create_char_param( "ANALYSIS PREFERENCE CTRLDEF SOL 101", "Default (Blank)" )
mscnastran_subcase.create_char_param( "PERFORM ERROR ANALYSIS", "ON" )
mscnastran_subcase.create_char_param( "ROTOR DYNAMICS", "OFF" )
mscnastran_subcase.create_char_param( "ALL EXPLICIT MPCS", "ON" )
mscnastran_job.associate_subcases( "101", "t", 1, ["Default"] )
analysis_submit_2( "MSC.Nastran", "t" )

# 12.RESULTS | --------------------------------------------------
LOGICAL ok; ok = ui_read_logical( "Show result?" )
msc_dra_init_stream(  )
msc_dra_add_param( "DATABASE", "C:\avk\test\patran\t.db" )
msc_dra_add_param( "JOBNAME", "t" )
msc_dra_add_param( "RESULTS FILE", "C:\avk\test\patran\t.xdb" )
msc_dra_add_param( "OBJECT", "Result Entities" )
msc_dra_add_param( "ANALYSIS TYPE", "Structural" )
msc_dra_add_param( "DIVISION TOLERANCE", "1.0E-8" )
msc_dra_add_param( "NUMERICAL TOLERANCE", "1.0E-4" )
msc_dra_add_param( "MODEL TOLERANCE", "0.005" )
msc_dra_add_param( "ROTATIONAL NODAL RESULTS", "OFF" )
msc_dra_add_param( "STRESS/STRAIN INVARIANTS", "OFF" )
msc_dra_add_param( "PRINCIPAL DIRECTIONS", "OFF" )
msc_dra_add_param( "ELEMENT RESULTS POSITIONS", "Nodal       " )
msc_dra_add_param( "TITLE DESCRIPTION", "ON" )
msc_dra_finish_stream(  )
analysis_import( "MSC.Nastran", "t", "Attach Results File No Job", "C:\avk\test\patran\t.xdb", TRUE )

# 13.RANGE | --------------------------------------------------

# 14.FRINGE | --------------------------------------------------
STRING sa_attr[64](17); sa_attr(1) = "Range:Ten_default_Tensor"; sa_attr(2) = "RangeOverwrite:ON"
 sa_attr(3) = "TensorDisplay:Component"; sa_attr(4) = "TensorComps:ON,ON,OFF,ON,OFF,OFF";
 sa_attr(5) = "TensorColors:Red,Green,Cyan,Yellow,Magenta,White"; sa_attr(6) = "VectorScale:ScreenConstant=0.1";
 sa_attr(7) = "HeadStyle:Single"; sa_attr(8) = "VectorStyle:Solid";
 sa_attr(9) = "BoxStyle:ON,Wireframe"; sa_attr(10) = "BoxColor:Yellow";
sa_attr(11) = "BoxScale:ScreenConstant=0.1"; sa_attr(12) = "TitleDisplay:ON";
sa_attr(13) = "MinMaxDisplay:ON"; sa_attr(14) = "LabelStyle:Integer, 10, White, 3";
sa_attr(15) = "ValueDisplay:ON"; sa_attr(16) = "Filter:None"; sa_attr(17) = "ScaleFactor:1.";
     
res_data_load_dbresult( 0, "Centroidal", "Tensor", "Default", "A1:Static Subcase", "Shell Forces", "Force Resultant", "(NON-LAYERED)", "", "AsIs", "DeriveAverage", "All", "ShapeFunc", "", 0. )
res_data_title( 0, "Centroidal", "Tensor", 1, ["$POFF@@@$PT: @@@$LCN, @@@$SCN, @@@$PRN, @@@$SRN, @@@$DRVL, @@@$LN"] )
res_display_tensor_create( "", "Elements", 0, [""], 17, sa_attr, TRUE )
res_display_tensor_post( "", 0, "Centroidal", TRUE, FALSE )

# results-> create-> freebody-> loads-> constrained forces-> show spreadsheet

# 15.DEFORM | --------------------------------------------------

# 16.VALIDATION | --------------------------------------------------
REAL height_mid; height_mid = height - 2 * thk
REAL stat_bot; stat_bot = width * thk * (thk/2)
REAL stat_mid; stat_mid = thk * height_mid * (height_mid/2 + thk)
REAL stat_top; stat_top = width * thk * (height - thk/2)
REAL stat; 	stat = stat_bot + stat_mid + stat_top
REAL area; area = 2 * width * thk + thk * height_mid
REAL cg_dist; cg_dist = stat/area
REAL Jx_na_bot; Jx_na_bot = width * thk * thk * thk/12
REAL Ay2_bot; Ay2_bot = width * thk * (cg_dist - thk/2) * (cg_dist - thk/2)
REAL Jx_na_mid; Jx_na_mid = thk * height_mid * height_mid * height_mid/12
REAL Jx; Jx = 2 * (Jx_na_bot + Ay2_bot) + Jx_na_mid
# REAL Mx; Mx = (load/2) * (length/2)
REAL Mx; Mx = load * length
REAL fx; fx = Mx * cg_dist/Jx

write_line("area = ", area, " Jx = ", Jx, " Mx = ", Mx, " fx = ", fx)
write_line("sa_attr = ", sa_attr)
# beam2D(4., 10., 0.1, 50., 1)

END FUNCTION